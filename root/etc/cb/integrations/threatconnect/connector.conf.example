[threatconnect]
#------------------------------------------------------------------------------
#    ThreatConnect Configuration
#------------------------------------------------------------------------------

# Specifies the connector client to use to connect to and pull from a ThreatConnect server.
# The Tcex client uses the tcex library which is provided by ThreatConnect but it shows signs of causing
# python to use much more memory.  The Direct client doesn't use the tcex library and is much more light-weight.
# If Tcex is being used and the service seems to be growing in memory usage over time, try switching to Direct.
# Tcex - This client uses the tcex library provided by ThreatConnect.
# Direct (default) - This client connects directly with ThreatConnect's API without using the tcex library.
#connection_client=Direct

# A comma seperated list of all of the sources to pull in from ThreatConnect.
# Use a * to indicate all sources.
sources=*

# This is the base url of the threatconnect web service API.  Must include /api portion if that is part of the url.
url=https://api.threatconnect.com

# This is the base url of the threatconnect web interface.  This is everything before /browse when viewing
# the threatconnect web interface.  This is used for building the report links.
web_url=https://app.threatconnect.com/auth

# This section allows global configuration options to be passed to the ThreatConnect feed.
# The API_KEY is an integer value and should not be enclosed in quotes.
#  Utilize the API and Secret keys provided by ThreatConnect to access your specific community.
api_key=
secret_key=

# The files below will list items to be filtered from ThreatConnect feeds.
# The most common use for these files is to provide an extra level of data
# validation so questionable data such as a listing for '127.0.0.1' as an IP IOC
# does not make its way to the final feed generated
# filtered_ip contains a text file of IPs, one per line, that should never result in feed hit
# filtered_host contains a text file of host names, one per line, that should never result in feed hit
# filtered_hashes contains a text file of file hashes, one per line, that should never result in feed hit
#filtered_ips=/home/username/ips.txt
#filtered_hashes=/home/username/hashes.txt
#filtered_hosts=/home/username/hosts.txt

# The type of IOCs to obtain.  Valid types are: File, Address, and host
ioc_types=File,Address,Host

# Minimum rating for an IOC to be included. If IOC rating is less than this value
# it will be filtered out. Default value is 1, even when not present. To allow unrated
# IOCs this value must be set to zero.  Acceptable values are from 0 to 5.
ioc_min_rating=1

# The type of report IOC Grouping.
# NOTE: Changing this value will cause the previously imported feed reports to be deleted.
# There are two types currently available:
# Expanded  -    This puts each IOC in it's own report.  Importing more than 10k reports
#                is a bad idea and should be avoided.  If the ThreatConnect feed is going
#                to contain more than 10k IOCs, use Condensed instead.
# Condensed -    (Suggested) This creates a report for each combination of source + ioc_type + score
#                and places all IOCs with the same source and score into the same report.  This will
#                dramatically reduce the number of reports and is the recommended method.
# MaxConsensed - This is similar to Condensed but instead creates a single report for each
#                combination of source + score.
ioc_grouping=Condensed

# The maximum number of reports to create.  Once this number is hit, no additional
# reports will generate.  For performance reasons, the number of reports being imported should be limited.
# Comment this line out to remove the limit.  If this limit is being reached, use
# ioc_grouping=Condensed instead.
max_reports=10000

# The default organization from which to pull IOCs.
default_org=

[bridge]
#------------------------------------------------------------------------------
#    Core Configuration
#------------------------------------------------------------------------------
listener_port=6100
# Change the following listener_address to 0.0.0.0 to allow remote connections
listener_address=127.0.0.1
# Change the following to the host address if cb Response server is remote.
#host_address=127.0.0.1

# The amount of time in minutes between the end of one feed retrieval and the start of another.
feed_retrieval_minutes=60

# Enabling debugging will cause the service to not return when started.  To just get debug logging,
# use log_level=DEBUG instead.
#debug=True

# This is the log level that will be output to the log.  Default is INFO.
# Options are: DEBUG, INFO, WARNING, ERROR
#log_level=INFO

# API key for an administrative user of the VMware Carbon Black EDR server
carbonblack_server_token=

# Only uncomment out the carbonblack_server_url if you are running the connector on a machine
#  *other* than the Cb server itself.
# carbonblack_server_url=

# If you need to use an HTTPS proxy to access the iSIGHT API server, uncomment and configure the https_proxy
# variable below.
# https_proxy=http://proxyuser:proxypass@proxyhostname:proxyport

# The location to store cached feed reports and temporary files
cache_folder=/usr/share/cb/integrations/cb-threatconnect-connector/cache

# Set this to true if you want the cache file to be formatted and easier to read.
# Warning! Enabling this will slow down the writing to disk by a magnitude of 10
#pretty_print_json=False

# If this option is set to true, it will cause the connector to not reach out to a CbResponse server to push
# sync requests and instead rely on the CbR Server to sync at it's regular schedule.
#skip_cb_sync=True

# Setting multi_core to True will use multiple processes for feed retrieval.  This has the effect of keeping
# memory usage low as the retrieval process ends after each retrieval returning used memory back to the OS.
# If this option is set to False, it will run multi-threaded which will have a larger memory footprint.
#multi_core=True

# If this option is set to Stream (default), the feed will be written to file via a stream as it is retrieving the
# feed from threatconnect.  This can use significantly less memory than Bulk.  If set to Bulk, the entire
# feed is read from threatconnect before it is saved to disk.  With large feeds (>100,000 records) it is best to
# leave this option as Stream to reduce the memory footprint.
# Stream (default) - Saves to disk while retrieving data.
# Bulk - Saves at the end of the feed retrieval.
#feed_save_mode=Stream