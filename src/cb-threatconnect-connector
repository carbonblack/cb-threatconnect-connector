#!/usr/bin/env python

import yaml
yaml.warnings({'YAMLLoadWarning': False})

import sys
from cbopensource.connectors.threatconnect import bridge, version
import os
import yaml


yaml.warnings({'YAMLLoadWarning': False})

if __name__ == "__main__":
    name = "cb-threatconnect-connector"

    # set the path to the CA certificate PEM file to our local cache
    cacert_pem_path = "/usr/share/cb/integrations/cb-threatconnect-connector/cacert.pem"
    cacert_pem_path2 = "/etc/cb/integrations/threatconnect/cacert.pem"
    if os.path.isfile(cacert_pem_path) or os.path.isfile(cacert_pem_path2):
        os.environ["REQUESTS_CA_BUNDLE"] = cacert_pem_path if os.path.isfile(cacert_pem_path) else cacert_pem_path2

    daemon = bridge.CarbonBlackThreatConnectBridge(name, "/etc/cb/integrations/threatconnect/connector.conf")
    if len(sys.argv) == 2:
        if 'start' == sys.argv[1]:
            daemon.start()
        elif 'stop' == sys.argv[1]:
            daemon.stop()
        elif 'restart' == sys.argv[1]:
            daemon.restart()
        elif 'version' == sys.argv[1]:
            print("%s - version %s" % (name, version.__version__))
        else:
            print("Unknown command: %s" % sys.argv[1])
            sys.exit(2)
    elif len(sys.argv) == 3:
        if 'write' == sys.argv[1]:
            json = daemon.perform_continuous_feed_retrieval(False)
            with open(sys.argv[2], 'w') as f:
                f.write(json)
        else:
            print("Unknown command: %s" % sys.argv[1])
            sys.exit(2)

    else:
        print("Usage: %s start|stop|restart|version|write <filename>" % sys.argv[0])
        sys.exit(2)

